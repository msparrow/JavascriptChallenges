[
  {"term":"Variable","definition":"A named container for storing data values. In JavaScript use let or const (prefer const by default)."},
  {"term":"Function","definition":"A reusable block of code defined with function, arrow functions, or class methods."},
  {"term":"Array","definition":"An ordered list-like object. Indexed starting at 0. Common methods include map, filter, reduce."},
  {"term":"Object","definition":"A collection of key-value pairs. Keys are strings or symbols; values can be any type."},
  {"term":"Boolean","definition":"A logical value: true or false."},
  {"term":"String","definition":"A sequence of characters. Immutable in JavaScript."},
  {"term":"Number","definition":"A double-precision floating point. Includes integers and floats (NaN and Infinity are special values)."},
  {"term":"Null","definition":"An intentional absence of any object value."},
  {"term":"Undefined","definition":"A variable that has not been assigned a value (or not declared)."},
  {"term":"Scope","definition":"The current context of execution in which values and expressions are visible (function, block, module)."},
  {"term":"Closure","definition":"A function together with its lexical environment; allows a function to access variables from an enclosing scope."},
  {"term":"Hoisting","definition":"JavaScript's behavior of moving declarations (not initializations) to the top of their scope at compile time."},
  {"term":"Prototype","definition":"The object that provides inheritance for another object. Functions have a prototype used when created with new."},
  {"term":"Promise","definition":"An object representing the eventual completion or failure of an asynchronous operation."},
  {"term":"Async/Await","definition":"Syntax sugar over Promises to write asynchronous code in a synchronous style."},
  {"term":"Event Loop","definition":"The mechanism that handles the execution of multiple pieces of code over time, including callbacks and microtasks."},
  {"term":"Strict Mode","definition":"A restricted variant of JavaScript that eliminates some silent errors and improves optimizations. Use 'use strict'."},
  {"term":"Type Coercion","definition":"Automatic or implicit conversion of values from one type to another."},
  {"term":"Equality (== vs ===)","definition":"== performs type coercion before comparison; === compares without coercion (preferred)."},
  {"term":"Destructuring","definition":"A syntax to extract values from arrays or properties from objects into distinct variables."},
  {"term":"Spread Operator","definition":"... expands iterables into individual elements or copies enumerable properties."},
  {"term":"Rest Parameters","definition":"... in function parameters collects remaining arguments into an array."},
  {"term":"Map","definition":"A key-value collection that preserves insertion order and accepts any key type."},
  {"term":"Set","definition":"A collection of unique values, preserving insertion order."},
  {"term":"Currying","definition":"Transforming a function with multiple arguments into a sequence of functions each with a single argument."},
  {"term":"Debounce","definition":"Delay invoking a function until after a wait time has elapsed since the last invocation."},
  {"term":"Throttle","definition":"Ensure a function is invoked at most once per specified time interval."},
  {"term":"IIFE","definition":"Immediately Invoked Function Expression: a function executed as soon as it is defined."},
  {"term":"Module","definition":"A file or collection of code with its own scope that can export and import values."},
  {"term":"Tree Shaking","definition":"A build optimization that removes unused code from final bundles."},
  {"term":"Immutability","definition":"Not modifying existing data structures; instead, creating new ones when changes are needed."}
]
